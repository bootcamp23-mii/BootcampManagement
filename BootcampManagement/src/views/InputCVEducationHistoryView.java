/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import models.Education;
import models.EducationHistory;
import org.hibernate.SessionFactory;
import tools.*;

/**
 *
 * @author FES
 */
public class InputCVEducationHistoryView extends javax.swing.JInternalFrame {

    private SessionFactory factory = HibernateUtil.getSessionFactory();
    private EducationHistoryControllerInterface c = new EducationHistoryController(factory);
    private EducationControllerInterface ce = new EducationController(factory);
    private static String tempID;
    private DefaultTableModel tableModel;
    
    private List<models.Education> educationList = new ArrayList<>();
    /**
     * Creates new form InputCVEducationHistory
     */
    public InputCVEducationHistoryView() {
        initComponents();
        setDefaultCondition();
        
    }

    private void setDefaultCondition(){
        showAllTable(c.searchWD(Session.getSession()));
        getEducationList();
        setComboBox();
        clean();
//        getRidTheBar();
    }
    
    private void showAllTable(List<EducationHistory> eh){
        Object[] columnNames = {"Nomor", "GPA", "Degree", "Major", "University"};
        Object[][] data = new Object[eh.size()][columnNames.length];
        for (int i = 0; i < data.length; i++) {
            try {
                data[i][0] = (i + 1);
                data[i][1] = eh.get(i).getGpa();
                data[i][2] = eh.get(i).getEducation().getDegree().getName();
                data[i][3] = eh.get(i).getEducation().getMajor().getName();
                data[i][4] = eh.get(i).getEducation().getUniversity().getName();
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        tableModel = new DefaultTableModel(data, columnNames);
        tbEducationHistory.setModel(tableModel);
    }
    
    private void getEducationList(){
        for (Education data : ce.getAll()) {
            educationList.add(data);
        }
    }
    
    private void setComboBox(){
        for (Education data : educationList) {
            cbEducationHis.addItem(data.getDegree().getName()+" ("+data.getMajor().getName()+") "+data.getUniversity().getName());
        }
    }
    
    private void getRidTheBar() {
        putClientProperty("Home.isPallete", Boolean.TRUE);
        getRootPane().setWindowDecorationStyle(JRootPane.NONE);
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.setBorder(null);
    }
    
    private void clean(){
        tfEducationHisGPA.setText("");
        cbEducationHis.setSelectedIndex(0);
        tempID="";
    }
    
    private boolean entryCheck() {
        try {
            if (tfEducationHisGPA.getText().equals("")
                    || cbEducationHis.getSelectedIndex()==0
                    )
            {
                JOptionPane.showMessageDialog(null, "Incorrect data entry!");
                return false;
            }
            if (Double.parseDouble(tfEducationHisGPA.getText())<0.0
                    || Double.parseDouble(tfEducationHisGPA.getText())>4.0)
            {
                JOptionPane.showMessageDialog(null, "Incorrect data entry!");
                return false;
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Incorrect data entry!");
            return false;
        }
        return true;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnMain = new javax.swing.JPanel();
        pnMTop = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        pnMTRCenter = new javax.swing.JPanel();
        pnMTRC1 = new javax.swing.JPanel();
        lblEducationHis1 = new javax.swing.JLabel();
        cbEducationHis = new javax.swing.JComboBox<>();
        lblEducationHis2 = new javax.swing.JLabel();
        tfEducationHisGPA = new javax.swing.JTextField();
        pnMTRC2 = new javax.swing.JPanel();
        btClear = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        pnMTRC3 = new javax.swing.JPanel();
        spcEducationHistory = new javax.swing.JScrollPane();
        tbEducationHistory = new javax.swing.JTable();
        pnMTBottom = new javax.swing.JPanel();
        pnMTRight = new javax.swing.JPanel();
        pnMTLeft = new javax.swing.JPanel();

        setBorder(null);
        setClosable(true);
        setTitle("Education History");
        setFrameIcon(null);
        setMinimumSize(new java.awt.Dimension(700, 500));
        setPreferredSize(new java.awt.Dimension(700, 500));

        pnMain.setBackground(new java.awt.Color(204, 255, 255));
        pnMain.setPreferredSize(new java.awt.Dimension(700, 500));
        pnMain.setLayout(new java.awt.BorderLayout(5, 5));

        pnMTop.setBackground(new java.awt.Color(204, 255, 255));
        pnMTop.setPreferredSize(new java.awt.Dimension(700, 50));

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTitle.setText("Education History");

        javax.swing.GroupLayout pnMTopLayout = new javax.swing.GroupLayout(pnMTop);
        pnMTop.setLayout(pnMTopLayout);
        pnMTopLayout.setHorizontalGroup(
            pnMTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(pnMTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnMTopLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblTitle)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        pnMTopLayout.setVerticalGroup(
            pnMTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
            .addGroup(pnMTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnMTopLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblTitle)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pnMain.add(pnMTop, java.awt.BorderLayout.PAGE_START);

        pnMTRCenter.setBackground(new java.awt.Color(204, 255, 255));
        pnMTRCenter.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnMTRCenter.setLayout(new javax.swing.BoxLayout(pnMTRCenter, javax.swing.BoxLayout.Y_AXIS));

        pnMTRC1.setBackground(new java.awt.Color(204, 255, 255));

        lblEducationHis1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblEducationHis1.setText("Education: ");
        pnMTRC1.add(lblEducationHis1);

        cbEducationHis.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbEducationHis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        cbEducationHis.setMinimumSize(new java.awt.Dimension(100, 25));
        cbEducationHis.setPreferredSize(new java.awt.Dimension(390, 25));
        pnMTRC1.add(cbEducationHis);

        lblEducationHis2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblEducationHis2.setText(" GPA:  ");
        pnMTRC1.add(lblEducationHis2);

        tfEducationHisGPA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfEducationHisGPA.setMinimumSize(new java.awt.Dimension(6, 25));
        tfEducationHisGPA.setPreferredSize(new java.awt.Dimension(80, 25));
        pnMTRC1.add(tfEducationHisGPA);

        pnMTRCenter.add(pnMTRC1);

        pnMTRC2.setBackground(new java.awt.Color(204, 255, 255));
        pnMTRC2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btClear.setText("Clear");
        btClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClearActionPerformed(evt);
            }
        });
        pnMTRC2.add(btClear);

        btSave.setText("Save");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });
        pnMTRC2.add(btSave);

        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });
        pnMTRC2.add(btDelete);

        pnMTRCenter.add(pnMTRC2);

        pnMTRC3.setBackground(new java.awt.Color(204, 255, 255));
        pnMTRC3.setPreferredSize(new java.awt.Dimension(640, 280));

        spcEducationHistory.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        spcEducationHistory.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        spcEducationHistory.setPreferredSize(new java.awt.Dimension(640, 280));

        tbEducationHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbEducationHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbEducationHistoryMouseClicked(evt);
            }
        });
        spcEducationHistory.setViewportView(tbEducationHistory);

        pnMTRC3.add(spcEducationHistory);

        pnMTRCenter.add(pnMTRC3);

        pnMain.add(pnMTRCenter, java.awt.BorderLayout.CENTER);

        pnMTBottom.setBackground(new java.awt.Color(204, 255, 255));
        pnMTBottom.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 25, 5));
        pnMain.add(pnMTBottom, java.awt.BorderLayout.PAGE_END);

        pnMTRight.setBackground(new java.awt.Color(204, 255, 255));
        pnMTRight.setPreferredSize(new java.awt.Dimension(20, 390));

        javax.swing.GroupLayout pnMTRightLayout = new javax.swing.GroupLayout(pnMTRight);
        pnMTRight.setLayout(pnMTRightLayout);
        pnMTRightLayout.setHorizontalGroup(
            pnMTRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        pnMTRightLayout.setVerticalGroup(
            pnMTRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 403, Short.MAX_VALUE)
        );

        pnMain.add(pnMTRight, java.awt.BorderLayout.LINE_END);

        pnMTLeft.setBackground(new java.awt.Color(204, 255, 255));
        pnMTLeft.setPreferredSize(new java.awt.Dimension(20, 390));

        javax.swing.GroupLayout pnMTLeftLayout = new javax.swing.GroupLayout(pnMTLeft);
        pnMTLeft.setLayout(pnMTLeftLayout);
        pnMTLeftLayout.setHorizontalGroup(
            pnMTLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        pnMTLeftLayout.setVerticalGroup(
            pnMTLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 403, Short.MAX_VALUE)
        );

        pnMain.add(pnMTLeft, java.awt.BorderLayout.LINE_START);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMain, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClearActionPerformed
        clean();
    }//GEN-LAST:event_btClearActionPerformed

    private void tbEducationHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEducationHistoryMouseClicked
        String temp="";
        for (Education data : educationList) {
            if (data.getDegree().getName().equals(tbEducationHistory.getValueAt(tbEducationHistory.getSelectedRow(), 2).toString())
                    &&data.getMajor().getName().equals(tbEducationHistory.getValueAt(tbEducationHistory.getSelectedRow(), 3).toString())
                    &&data.getUniversity().getName().equals(tbEducationHistory.getValueAt(tbEducationHistory.getSelectedRow(), 4).toString())
                    )temp=data.getId();
        }
        for (int i = 0; i < cbEducationHis.getItemCount(); i++) {
            if (cbEducationHis.getItemAt(i).equals(tbEducationHistory.getValueAt(tbEducationHistory.getSelectedRow(), 2).toString()
                    +" ("+tbEducationHistory.getValueAt(tbEducationHistory.getSelectedRow(), 3).toString()
                    +") "+tbEducationHistory.getValueAt(tbEducationHistory.getSelectedRow(), 4).toString()))
            cbEducationHis.setSelectedIndex(i);
        }
        tfEducationHisGPA.setText(tbEducationHistory.getValueAt(tbEducationHistory.getSelectedRow(), 1).toString());
        List<EducationHistory> dataList=c.searchWD(Session.getSession());
        for (EducationHistory data : dataList) {
            if (data.getGpa().equals(tfEducationHisGPA.getText())
                    &&data.getEducation().getId().equals(temp)
                    )tempID=data.getId();
        }
    }//GEN-LAST:event_tbEducationHistoryMouseClicked

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        if (entryCheck()) {
            String temp="";
            for (Education data : educationList) {
                if (cbEducationHis.getSelectedItem().equals(data.getDegree().getName()+" ("+data.getMajor().getName()+") "+data.getUniversity().getName()))
                    temp=data.getId();
            }
            c.save(tempID, tfEducationHisGPA.getText(), temp, Session.getSession());
            showAllTable(c.searchWD(Session.getSession()));
        }
        clean();
    }//GEN-LAST:event_btSaveActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        String temp="";
        for (Education data : educationList) {
            if (cbEducationHis.getSelectedItem().equals(data.getDegree().getName()+" ("+data.getMajor().getName()+") "+data.getUniversity().getName()))
                temp=data.getId();
        }

        c.deleteSoft("", tfEducationHisGPA.getText(), temp, Session.getSession());
        showAllTable(c.searchWD(Session.getSession()));
        clean();
    }//GEN-LAST:event_btDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btClear;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btSave;
    private javax.swing.JComboBox<String> cbEducationHis;
    private javax.swing.JLabel lblEducationHis1;
    private javax.swing.JLabel lblEducationHis2;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnMTBottom;
    private javax.swing.JPanel pnMTLeft;
    private javax.swing.JPanel pnMTRC1;
    private javax.swing.JPanel pnMTRC2;
    private javax.swing.JPanel pnMTRC3;
    private javax.swing.JPanel pnMTRCenter;
    private javax.swing.JPanel pnMTRight;
    private javax.swing.JPanel pnMTop;
    private javax.swing.JPanel pnMain;
    private javax.swing.JScrollPane spcEducationHistory;
    private javax.swing.JTable tbEducationHistory;
    private javax.swing.JTextField tfEducationHisGPA;
    // End of variables declaration//GEN-END:variables
}
